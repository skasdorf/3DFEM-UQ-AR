#pragma once
#include <vector>
#include <complex>
#include <string>
#include <fstream>
#include <iostream>
#include "../utility/functions.h"
#include <Eigen\Core>
#include "../structure/Domain.h"
#include "../functions/unitVectorsM.h"
#include "../utility/additional_basis.h"
#include "../structure/Element.h"

namespace tests {
	Point midpoint(Point& p1, Point& p2);
	void test(std::vector<int> refine_elements, Domain& dom, double factor);
	std::vector<Point> get_base_coords(int geom_order);
	std::vector<Point> get_inner_coords(int geom_order, std::vector<Point>& base_coords, double factor);
	std::vector<Point> get_inbetween_coords(int geom_order, std::vector<Point>& base_coords, std::vector<Point>& inner_coords);
	void split_elements(Domain& dom, std::vector<int>& refine_elements, double factor);
}

struct coord_table {
	std::vector<std::vector<int>> indices = { { 1,54,28,4,57,31,7,60,34,10,63,37,13,66,40,16,68,42,19,71,45,22,74,48,25,77,51 },{ 9,62,36,6,59,33,3,56,30,18,70,44,15,67,41,12,65,39,27,79,53,24,76,50,21,73,47 },{ 1,2,3,54,55,56,28,29,30,10,11,12,63,64,65,37,38,39,19,20,21,71,72,73,45,46,47 },{ 9,8,7,62,21,60,36,35,34,18,17,16,70,69,68,44,43,42,27,26,25,79,78,77,53,52,51 },{ 1,2,3,4,5,6,7,8,9,54,55,56,57,58,59,60,61,62,28,29,30,31,32,33,34,35,36 },{ 27,26,25,24,23,22,21,20,19,79,78,77,76,75,74,73,72,71,53,52,51,50,49,48,47,46,45 },{ 28,29,30,31,32,33,34,35,36,37,38,39,40,14,41,42,43,44,45,46,47,48,49,50,51,52,53 } };
	std::vector<std::vector<int>> indices2 = { {34, 60, 7, 31, 57, 4, 28, 54, 1, 42, 68, 16, 40, 66, 13, 37, 63, 10, 51, 77, 25, 48, 74, 22, 45, 71, 19},
	{30, 56, 3, 33, 59, 6, 36, 62, 9, 39, 65, 12, 41, 67, 15, 44, 70, 18, 47, 73, 21, 50, 76, 24, 53, 79, 27},
	{28, 54, 1, 29, 55, 2, 30, 56, 3, 37, 63, 10, 38, 64, 11, 39, 65, 12, 45, 71, 19, 46, 72, 20, 47, 73, 21},
	{36, 62, 9, 35, 61, 8, 34, 60, 7, 44, 70, 18, 43, 69, 17, 42, 68, 16, 53, 79, 27, 52, 79, 26, 51, 77, 25},
	{36, 62, 9, 33, 59, 6, 30, 56, 3, 35, 61, 8, 32, 58, 5, 29, 55, 2, 34, 60, 7, 31, 57, 4, 28, 54, 1},
	{51, 77, 25, 48, 74, 22, 45, 71, 19, 52, 78, 26, 49, 75, 23, 46, 72, 20, 53, 79, 27, 50, 76, 24, 47, 73, 21},
	{28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 14, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53} };

	std::vector<std::vector<int>> indices3 = { { 1,54,28,4,57,31,7,60,34,10,63,37,13,66,40,16,68,42,19,71,45,22,74,48,25,77,51 }, //el0
	{ 30,56,3,33,59,6,36,62,9,39,65,12,41,67,15,44,70,18,47,73,21,50,76,24,53,79,27 },//el1
	{ 1,2,3,54,55,56,28,29,30,10,11,12,63,64,65,37,38,39,19,20,21,71,72,73,45,46,47 }, //el2
	//{1,54,28,2,55,29,3,56,30,10,63,37,11,64,38,12,65,39,19,71,45,20,72,46,21,73,47},//el2
	{ 34,35,36,60,61,62,7,8,9,42,43,44,68,69,70,16,17,18,51,52,53,77,78,79,25,26,27 },//el3
	//{7, 60, 34, 8, 61, 35, 9, 62, 36, 16, 68, 42, 17, 69, 43, 18, 70, 44, 25,77,51,26,78,52,27,79,53}, //el3
	//{30,56,3,33,59,6,36,62,9, 39,65,12,41,67,15,44,70,18,47,73,21,50,76,24,53,79,27}, //el3 - worked sort of
	//{34,60,7,35,61,8,36,62,9,42,68,16,43,69,17,44,70,18,51,77,25,52,78,26,53,79,27}, //el3
	//{36,62,9,35,61,8,34,60,7,44,70,18,43,69,17,42,68,16,53,79,27,52,78,26,51,77,25}, //el3 - seems to work best
	//{ 1,2,3,4,5,6,7,8,9,54,55,56,57,58,59,60,61,62,28,29,30,31,32,33,34,35,36 },//el4
	//{1,54,28,4,57,31,7,60,34,2,55,29,5,58,32,8,61,35,3,56,30,6,59,33,9,62,36}, //el4 didn't work with el3 - seems to work best version
	//{1,54,28,2,55,29,3,56,30,4,57,31,5,58,32,6,59,33,7,60,34,8,61,35,9,62,36},  //el4 same as above
	//{7,60,34,8,61,35,9,62,36,4,57,31,5,58,32,6,59,33,1,54,28,2,55,29,3,56,30},//el4 same as above
	//{ 36,62,9,35,61,8,34,60,7,33,59,6,32,58,5,31,57,4,30,56,3,29,55,2,28,54,1 }, //el4 same as above
	{28,31,34,29,32,35,30,33,36,54,57,60,55,58,61,56,59,62,1,4,7,2,5,8,3,6,9}, //el4
	{ 45,46,47,48,49,50,51,52,53,71,72,73,74,75,76,77,78,79,19,20,21,22,23,24,25,26,27 }, //el 5
		//{ 53,52,51,50,49,48,47,46,45,44,43,42,41,14,40,39,38,37,36,35,34,33,32,21,30,29,28 } }; //el6
			//{36,35,34,33,32,21,30,29,28,44,43,42,41,14,40,39,38,37,53,52,51,50,49,48,47,46,45} }; //el6 (central)
		{28,29,30,31,32,33,34,35,36,37,38,39,40,14,41,42,43,44,45,46,47,48,49,50,51,52,53} };
};